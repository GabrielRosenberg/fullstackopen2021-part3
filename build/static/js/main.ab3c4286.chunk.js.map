{"version":3,"sources":["components/ContactForm.jsx","components/ContactDetails.jsx","components/ContactsList.jsx","components/SearchFilter.jsx","App.js","reportWebVitals.js","index.js"],"names":["ContactForm","name","number","nameHandler","numberHandler","add","onSubmit","value","onChange","type","ContactDetails","person","ContactsList","persons","newSearch","style","listStyle","map","includes","SearchFilter","searchText","handler","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setNewSearch","useEffect","console","log","axios","get","then","response","populatePersons","data","event","target","preventDefault","window","alert","personsCopy","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAoBeA,EAlBK,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,YAAaC,EAAyB,EAAzBA,cAAeC,EAAU,EAAVA,IAC/D,OACE,uBAAMC,SAAUD,EAAhB,UACE,gCACE,yCACQ,uBAAOE,MAAON,EAAMO,SAAUL,OAEtC,2CACU,uBAAOI,MAAOL,EAAQM,SAAUJ,UAG5C,8BACE,wBAAQK,KAAK,SAAb,uBCROC,EAJQ,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACxB,OAAO,uCAAQA,EAAOV,KAAf,YAAuBU,EAAOT,WCSxBU,EATM,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,UAM/B,OAAO,oBAAIC,MAAO,CAAEC,UAAW,QAAxB,SAAmCH,EAAQI,KALlC,SAACN,GACf,GAAIA,EAAOV,KAAKiB,SAASJ,IAA4B,KAAdA,EACrC,OAAO,cAAC,EAAD,CAAkCH,OAAQA,GAArBA,EAAOV,YCI1BkB,EARM,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,QAClC,OACE,2CACU,uBAAOd,MAAOa,EAAYZ,SAAUa,QCkEnCC,EAjEH,WACV,MAA8BC,mBAAS,IAAvC,mBAAOV,EAAP,KAAgBW,EAAhB,KACA,EAA8BD,mBAAS,IAAvC,mBAAOE,EAAP,KAAgBC,EAAhB,KACA,EAAkCH,mBAAS,IAA3C,mBAAOI,EAAP,KAAkBC,EAAlB,KACA,EAAkCL,mBAAS,IAA3C,mBAAOT,EAAP,KAAkBe,EAAlB,KAIAC,qBAAU,WACRC,QAAQC,IAAI,+CACZC,IAAMC,IAJQ,gBAIKC,MAAK,SAAAC,GACtBL,QAAQC,IAAI,wBAAyBI,GACrCC,EAAgBD,EAASE,WAE1B,IAEH,IAAMD,EAAkB,SAACC,GACvBd,EAAWc,IA8Bb,OACE,gCACE,2CACA,cAAC,EAAD,CAAclB,WAAYN,EAAWO,QAPd,SAACkB,GAC1BV,EAAaU,EAAMC,OAAOjC,UAOxB,2CACA,cAAC,EAAD,CACEN,KAAMwB,EACNvB,OAAQyB,EACRxB,YApBmB,SAACoC,GACxBb,EAAWa,EAAMC,OAAOjC,QAoBpBH,cAjBqB,SAACmC,GAC1BX,EAAaW,EAAMC,OAAOjC,QAiBtBF,IArCU,SAACkC,GAKf,GAJAA,EAAME,iBAEW5B,EAAQI,KAAI,SAACN,GAAD,OAAYA,EAAOV,QAEnCiB,SAASO,GACpBiB,OAAOC,MAAP,UAAgBlB,EAAhB,sCACG,CACH,IAAMmB,EAAW,sBAAO/B,GAAP,CAAgB,CAAEZ,KAAMwB,EAASvB,OAAQyB,KAC1DD,EAAW,IACXE,EAAa,IACbS,EAAgBO,OA4BhB,yCACA,cAAC,EAAD,CAAc/B,QAASA,EAASC,UAAWA,QCtDlC+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ab3c4286.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst ContactForm = ({ name, number, nameHandler, numberHandler, add }) => {\r\n  return (\r\n    <form onSubmit={add}>\r\n      <div>\r\n        <div>\r\n          name: <input value={name} onChange={nameHandler} />\r\n        </div>\r\n        <div>\r\n          number: <input value={number} onChange={numberHandler} />\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\n\r\nconst ContactDetails = ({ person }) => {\r\n  return <li>{`${person.name} ${person.number}`}</li>;\r\n};\r\n\r\nexport default ContactDetails;\r\n","import React from \"react\";\r\nimport ContactDetails from \"./ContactDetails\";\r\n\r\nconst ContactsList = ({ persons, newSearch }) => {\r\n  const isMatch = (person) => {\r\n    if (person.name.includes(newSearch) || newSearch === \"\")\r\n      return <ContactDetails key={person.name} person={person} />;\r\n  };\r\n\r\n  return <ul style={{ listStyle: \"none\" }}>{persons.map(isMatch)}</ul>;\r\n};\r\n\r\nexport default ContactsList;\r\n","import React from \"react\";\r\n\r\nconst SearchFilter = ({ searchText, handler }) => {\r\n  return (\r\n    <div>\r\n      Search: <input value={searchText} onChange={handler} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchFilter;\r\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport ContactForm from \"./components/ContactForm\";\nimport ContactsList from \"./components/ContactsList\";\nimport SearchFilter from \"./components/SearchFilter\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [newSearch, setNewSearch] = useState(\"\");\n\n  const baseUrl = '/api/persons'\n\n  useEffect(() => {\n    console.log(\"Effect is run, collecting phonepook from db\")\n    axios.get(baseUrl).then(response => {\n      console.log('Promise was fulfilled', response)\n      populatePersons(response.data)\n    })\n  }, [])\n\n  const populatePersons = (data) => {\n    setPersons(data)\n  } \n\n  const addName = (event) => {\n    event.preventDefault();\n\n    const nameList = persons.map((person) => person.name);\n\n    if (nameList.includes(newName))\n      window.alert(`${newName} is already in the phonebook.`);\n    else {\n      const personsCopy = [...persons, { name: newName, number: newNumber }];\n      setNewName(\"\");\n      setNewNumber(\"\");\n      populatePersons(personsCopy);\n    }\n  };\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleSearchChange = (event) => {\n    setNewSearch(event.target.value);\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <SearchFilter searchText={newSearch} handler={handleSearchChange} />\n      <h2>Add a new</h2>\n      <ContactForm\n        name={newName}\n        number={newNumber}\n        nameHandler={handleNameChange}\n        numberHandler={handleNumberChange}\n        add={addName}\n      />\n      <h2>Numbers</h2>\n      <ContactsList persons={persons} newSearch={newSearch} />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}